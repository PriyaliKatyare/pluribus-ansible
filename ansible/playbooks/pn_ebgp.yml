---


# This task is to configure eBGP.
# It uses pn_ebgp.py module from library/ directory.
# pn_cliusername and pn_clipassword comes from vars file - cli_vault.yml
# If you don't specify values for pn_bgp_maxpath, pn_bgp_redistribute, pn_bgp_as_range,
# then it will take the default values specified in the pn_ebgp.py module.
# If the tasks fails then it will retry as specified by retries count.
- name: Zero Touch Provisioning - BGP setup
  hosts: spine[0]
  serial: 1
  become: true
  become_method: su
  become_user: root

  vars_files:
  - cli_vault.yml

  tasks:
    - name: Configure eBGP
      pn_ebgp:
        pn_cliusername: "{{ USERNAME }}"        # Cli username (value comes from cli_vault.yml).
        pn_clipassword: "{{ PASSWORD }}"        # Cli password (value comes from cli_vault.yml).
        pn_spine_list: "{{ groups['spine'] }}"  # List of all spine switches mentioned under [spine] grp in hosts file.
        pn_leaf_list: "{{ groups['leaf'] }}"    # List of all leaf switches mentioned under [leaf] grp in hosts file.
        pn_bfd: True                            # Flag to indicate if BFD config should be added to eBGP. Default: False.
        # pn_bgp_maxpath: '16'                  # BGP-MAXPATH value to be assigned to vrouters. Default: 16
        # pn_bgp_redistribute: 'connected'      # BGP-REDISTRIBUTE value to be assigned to vrouters. Chocies: none, static, connected, rip, ospf. Default: connected
        # pn_bgp_as_range: '65000'              # BGP-AS-RANGE value to be assigned to vrouters. Default: 65000
        # pn_ibgp_ip_range: '75.75.75.0/30'     # iBGP IP range to be assign to interfaces. Default: '75.75.75.0/30'
        # pn_ibgp_vlan: '4040'                  # iBGP vlan value to be assigned to interfaces. Default 4040
      register: bgp_out                         # Variable to hold/register output of the above tasks.
      until: bgp_out.failed != true             # If the above code fails it will retry the code
      retries: 3                                # This is the retries count
      delay: 1
      ignore_errors: yes                        # Flag to indicate if we should ignore errors if any.

    - debug:
        var: bgp_out.stdout_lines               # Print stdout_lines of register variable.

    - pause:
        seconds: 2                              # Pause playbook execution for specified amount of time.
