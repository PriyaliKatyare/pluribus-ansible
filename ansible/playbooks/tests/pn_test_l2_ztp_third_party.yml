---


- name: Reset switches
  hosts: localhost

  vars_files:
  - cli_vault.yml

  tasks:
    - name: Switch config reset
      pn_switch_config_reset:
        pn_cliusername: "{{ USERNAME }}"           # Cli username (value comes from cli_vault.yml).
        pn_clipassword: "{{ PASSWORD }}"           # Cli password (value comes from cli_vault.yml).
        pn_host_list: "{{ groups['all'] }}"        # List of all switches
        pn_host_ips: "{{ groups['all'] | map('extract', hostvars, ['ansible_host']) | join(',') }}"  # IPs of all switches separated by comma


# This task is to accept eula.
# It uses pn_eula_accept.py module from library/ directory.
# pn_cliusername and pn_clipassword comes from vars file - cli_vault.yml
- name: Zero Touch Provisioning - Eula accept
  hosts: localhost

  vars_files:
  - cli_vault.yml

  tasks:
    - name: Auto accept EULA
      pn_eula_accept:
        pn_cliusername: "{{ USERNAME }}"               # Cli username (value comes from cli_vault.yml).
        pn_clipassword: "{{ PASSWORD }}"               # Cli password (value comes from cli_vault.yml).
        pn_spine_list: "{{ groups['spine'] | default([]) }}"         # List of all spine switches
        pn_leaf_list: "{{ groups['leaf'] | default([])}}"            # List of all leaf switches
        pn_leaf_ips: "{{ groups['leaf'] | default('') | map('extract', hostvars, ['ansible_host']) | join(',') }}"  
        pn_spine_ips: "{{ groups['spine'] | default('') | map('extract', hostvars, ['ansible_host']) | join(',') }}"


# This task is to configure initial ZTP setup on all switches.
# It uses pn_fabric_creation.py module from library/ directory.
# pn_cliusername and pn_clipassword comes from vars file - cli_vault.yml
# If the tasks fails then it will retry as specified by retries count.
- name: Zero Touch Provisioning - Initial setup
  hosts: all
  serial: 1

  vars_files:
  - cli_vault.yml

  vars:
  - json_file_path: /tmp/output.json

  tasks:
    - name: Create/join fabric
      pn_fabric_creation:
        pn_cliusername: "{{ USERNAME }}"               # Cli username (value comes from cli_vault.yml).
        pn_clipassword: "{{ PASSWORD }}"               # Cli password (value comes from cli_vault.yml).
        pn_fabric_name: 'test-l2-fabric'               # Name of the fabric to create/join.
        pn_current_switch: "{{ inventory_hostname }}"  # Name of the switch on which this task is currently getting executed.
        pn_spine_list: "{{ groups['spine'] }}"         # List of all spine switches mentioned under [spine] grp in hosts file.
        pn_leaf_list: "{{ groups['leaf'] }}"           # List of all leaf switches mentioned under [leaf] grp in hosts file.
        # pn_toggle_40g: True                          # Flag to indicate if 40g ports should be converted to 10g ports or not.
        # pn_inband_ip: '172.16.1.0/24'                # Inband ips to be assigned to switches starting with this value. Default: 172.16.0.0/24.
        # pn_fabric_network: 'mgmt'                    # Choices: in-band or mgmt.  Default: mgmt
        # pn_fabric_control_network: 'mgmt'            # Choices: in-band or mgmt.  Default: mgmt
        # pn_static_setup: False                       # Flag to indicate if static values should be assign to following switch setup params. Default: True.
        # pn_mgmt_ip: "{{ ansible_host }}"             # Specify MGMT-IP value to be assign if pn_static_setup is True.
        # pn_mgmt_ip_subnet: '16'                      # Specify subnet mask for MGMT-IP value to be assign if pn_static_setup is True.
        # pn_gateway_ip: '10.9.9.0'                    # Specify GATEWAY-IP value to be assign if pn_static_setup is True.
        # pn_dns_ip: '10.20.41.1'                      # Specify DNS-IP value to be assign if pn_static_setup is True.
        # pn_dns_secondary_ip: '10.20.4.1'             # Specify DNS-SECONDARY-IP value to be assign if pn_static_setup is True.
        # pn_domain_name: 'pluribusnetworks.com'       # Specify DOMAIN-NAME value to be assign if pn_static_setup is True.
        # pn_ntp_server: '0.us.pool.ntp.org'           # Specify NTP-SERVER value to be assign if pn_static_setup is True.
        # pn_web_api: True                             # Flag to enable web api. Default: True
        # pn_stp: False                                # Specify True if you want to enable STP at the end. Default: False.
      register: ztp_out                                # Variable to hold/register output of the above tasks.
      until: ztp_out.failed != true                    # If the above code fails it will retry the code
      retries: 3                                       # This is the retries count
      delay: 3
      ignore_errors: yes                               # Flag to indicate if we should ignore errors if any.

    # Copy the json output of the above task in a file
    - local_action: copy content={{ ztp_out }} dest={{ json_file_path }}

    # Validate the json output stored in the file
    - local_action: command python validate_json.py {{ json_file_path }}
      register: validate

    # Remove the above created file
    - local_action: file path={{ json_file_path }} state=absent

    - fail:
        msg: "JSON validation failed"
      when: validate.stdout != "JSON Validation Successful"

    - pause:
        seconds: 2                                     # Pause playbook execution for specified amount of time.


- name: Reset switches
  hosts: localhost

  vars_files:
  - cli_vault.yml

  tasks:
    - name: Switch config reset
      pn_switch_config_reset:
        pn_cliusername: "{{ USERNAME }}"           # Cli username (value comes from cli_vault.yml).
        pn_clipassword: "{{ PASSWORD }}"           # Cli password (value comes from cli_vault.yml).
        pn_host_list: "{{ groups['leaf'] }}"        # List of all switches
        pn_host_ips: "{{ groups['leaf'] | map('extract', hostvars, ['ansible_host']) | join(',') }}"  # IPs of all switches separated by comma


# This task is to accept eula.
# It uses pn_eula_accept.py module from library/ directory.
# pn_cliusername and pn_clipassword comes from vars file - cli_vault.yml
- name: Zero Touch Provisioning - Eula accept
  hosts: localhost

  vars_files:
  - cli_vault.yml

  tasks:
    - name: Auto accept EULA
      pn_eula_accept:
        pn_cliusername: "{{ USERNAME }}"               # Cli username (value comes from cli_vault.yml).
        pn_clipassword: "{{ PASSWORD }}"               # Cli password (value comes from cli_vault.yml).
        pn_leaf_list: "{{ groups['leaf'] | default([])}}"            # List of all leaf switches
        pn_leaf_ips: "{{ groups['leaf'] | default('') | map('extract', hostvars, ['ansible_host']) | join(',') }}"


# This task is to configure initial ZTP setup on all switches.
# It uses pn_fabric_creation.py module from library/ directory.
# pn_cliusername and pn_clipassword comes from vars file - cli_vault.yml
# If the tasks fails then it will retry as specified by retries count.
- name: Zero Touch Provisioning - Initial setup
  hosts: leaf
  serial: 1

  vars_files:
  - cli_vault.yml

  vars:
  - json_file_path: /tmp/output.json

  tasks:
    - name: Create/join fabric
      pn_fabric_creation:
        pn_cliusername: "{{ USERNAME }}"               # Cli username (value comes from cli_vault.yml).
        pn_clipassword: "{{ PASSWORD }}"               # Cli password (value comes from cli_vault.yml).
        pn_fabric_name: 'leaf-l2-fabric'               # Name of the fabric to create/join.
        pn_current_switch: "{{ inventory_hostname }}"  # Name of the switch on which this task is currently getting executed.
        pn_spine_list: "{{ groups['spine'] }}"         # List of all spine switches mentioned under [spine] grp in hosts file.
        pn_leaf_list: "{{ groups['leaf'] }}"           # List of all leaf switches mentioned under [leaf] grp in hosts file.
        # pn_toggle_40g: True                          # Flag to indicate if 40g ports should be converted to 10g ports or not.
        # pn_inband_ip: '172.16.1.0/24'                # Inband ips to be assigned to switches starting with this value. Default: 172.16.0.0/24.
        # pn_fabric_network: 'mgmt'                    # Choices: in-band or mgmt.  Default: mgmt
        # pn_fabric_control_network: 'mgmt'            # Choices: in-band or mgmt.  Default: mgmt
        # pn_static_setup: False                       # Flag to indicate if static values should be assign to following switch setup params. Default: True.
        # pn_mgmt_ip: "{{ ansible_host }}"             # Specify MGMT-IP value to be assign if pn_static_setup is True.
        # pn_mgmt_ip_subnet: '16'                      # Specify subnet mask for MGMT-IP value to be assign if pn_static_setup is True.
        # pn_gateway_ip: '10.9.9.0'                    # Specify GATEWAY-IP value to be assign if pn_static_setup is True.
        # pn_dns_ip: '10.20.41.1'                      # Specify DNS-IP value to be assign if pn_static_setup is True.
        # pn_dns_secondary_ip: '10.20.4.1'             # Specify DNS-SECONDARY-IP value to be assign if pn_static_setup is True.
        # pn_domain_name: 'pluribusnetworks.com'       # Specify DOMAIN-NAME value to be assign if pn_static_setup is True.
        # pn_ntp_server: '0.us.pool.ntp.org'           # Specify NTP-SERVER value to be assign if pn_static_setup is True.
        # pn_web_api: True                             # Flag to enable web api. Default: True
        # pn_stp: False                                # Specify True if you want to enable STP at the end. Default: False.
      register: ztp_out                                # Variable to hold/register output of the above tasks.
      until: ztp_out.failed != true                    # If the above code fails it will retry the code
      retries: 3                                       # This is the retries count
      delay: 3
      ignore_errors: yes                               # Flag to indicate if we should ignore errors if any.

    # Copy the json output of the above task in a file
    - local_action: copy content={{ ztp_out }} dest={{ json_file_path }}

    # Validate the json output stored in the file
    - local_action: command python validate_json.py {{ json_file_path }}
      register: validate

    # Remove the above created file
    - local_action: file path={{ json_file_path }} state=absent

    - fail:
        msg: "JSON validation failed"
      when: validate.stdout != "JSON Validation Successful"

    - pause:
        seconds: 2                                     # Pause playbook execution for specified amount of time.


# L2 ZTP setup and automation tests
- name: Zero Touch Provisioning - Layer2
  hosts: leaf[0]

  vars_files:
  - cli_vault.yml

  vars:
    leaf_count: "{{ groups['leaf'] | length }}"

  tasks:
    # Configure/setup L2 ZTP
    - name: Configure Layer2 ZTP (auto vlag)
      pn_l2_third_party:
        pn_cliusername: "{{ USERNAME }}"        # Cli username (value comes from cli_vault.yml).
        pn_clipassword: "{{ PASSWORD }}"        # Cli password (value comes from cli_vault.yml).
        pn_spine_list: "{{ groups['spine'] }}"  # List of all spine switches mentioned under [spine] grp in hosts file.
        pn_leaf_list: "{{ groups['leaf'] }}"    # List of all leaf switches mentioned under [leaf] grp in hosts file.
        pn_update_fabric_to_inband: False       # Flag to indicate if fabric network should be updated to in-band. Default: False.
        pn_stp: False                           # Specify True if you want to enable STP at the end. Default: False.
      register: ztp_l2_out                      # Variable to hold/register output of the above tasks.
      until:  ztp_l2_out.failed != true         # If error pops up it will retry the code.
      retries: 3                                # This is the retries count.
      delay: 3
      ignore_errors: yes                        # Flag to indicate if we should ignore errors if any.

    - debug:
        var: ztp_l2_out.stdout_lines            # Print stdout_lines of register variable.

    - pause:
        seconds: 2                              # Pause playbook execution for specified amount of time.


    # Test L2 ZTP configuration
    - name: Test Layer2 Zero Touch Provisioning with third party switches
      pn_test_l2_ztp_third_party:
        pn_cliusername: "{{ USERNAME }}"       # Cli username (value comes from cli_vault.yml).
        pn_clipassword: "{{ PASSWORD }}"       # Cli password (value comes from cli_vault.yml).
        pn_leaf_count: "{{ leaf_count }}"      # Count of Leaf switches.
      register: test_out

    - debug:
        var: test_out.stdout_lines             # Print stdout_lines of register variable.

