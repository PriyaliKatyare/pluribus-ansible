---


# This task is to configure initial ZTP setup on all switches.
# It uses pn_ztp.py module from library/ directory.
# pn_cliusername and pn_clipassword comes from vars file - cli_vault.yml
# Mandatory parameters: pn_fabric_name, pn_run_l2_l3, pn_current_switch
# When pn_run_l2_l3 is False, it will run initial ZTP setup.
# If the tasks fails then it will retry as specified by retries count.
- name: Zero Touch Provisioning - Initial setup
  hosts: all
  serial: 1
  become: true
  become_method: su
  become_user: root

  vars_files:
  - cli_vault.yml

  tasks:
    - name: Auto accept EULA, Disable STP, enable ports and create/join fabric
      pn_ztp:
        pn_cliusername: "{{ USERNAME }}"
        pn_clipassword: "{{ PASSWORD }}"
        pn_fabric_name: 'ebgp-fabric'
        pn_run_l2_l3: False
        pn_current_switch: "{{ inventory_hostname }}"
        pn_toggle_40g: True          # It is true by default
      register: ztp_out
      until: ztp_out.failed != true  # If the above code fails it will retry the code
      retries: 3                     # This is the retries count
      delay: 3
      ignore_errors: yes

    - debug:
        var: ztp_out.stdout_lines

    - pause:
        seconds: 2


# This task is to configure VRRP for Layer 3 using csv lookup.
# It takes required VRRP config data from csv file.
# Specify the correct 'csv_file' path under vars section.
# It uses pn_ztp_vrrp_l3.py module from library/ directory.
# pn_cliusername and pn_clipassword comes from vars file - cli_vault.yml
# Mandatory parameters: pn_fabric_name, pn_csv_data
# If the tasks fails then it will retry as specified by retries count.
- name: Virtual Router Redundancy Protocol (VRRP) - Layer 3 Setup
  hosts: spine[0]
  serial: 1
  become: true
  become_method: su
  become_user: root

  vars_files:
  - cli_vault.yml

  vars:
  - csv_file: /etc/ansible/pluribus-ansible/ansible/l3_auto_setup.csv

  tasks:
    - name: Configure VRRP L3 setup
      pn_ztp_vrrp_l3:
        pn_cliusername: "{{ USERNAME }}"
        pn_clipassword: "{{ PASSWORD }}"
        pn_fabric_name: 'ebgp-fabric'
        pn_spine_list: "{{ groups['spine'] }}"
        pn_leaf_list: "{{ groups['leaf'] }}"
        pn_csv_data: "{{ lookup('file', '{{ csv_file }}') }}"
      register: vrrp_out
      until:  vrrp_out.failed != true  # If error pops up it will retry the code
      retries: 3                       # This is the retries count
      delay: 1
      ignore_errors: yes

    - debug:
        var: vrrp_out.stdout_lines

    - pause:
        seconds: 2


# This task is to configure ZTP layer 3 setup.
# It uses pn_ztp.py module from library/ directory.
# pn_cliusername and pn_clipassword comes from vars file - cli_vault.yml
# Mandatory parameters: pn_fabric_name, pn_run_l2_l3
# When pn_run_l2_l3 is True and pn_fabric_type is 'layer3', it will run ZTP layer3 setup.
# If the tasks fails then it will retry as specified by retries count.
- name: Zero Touch Provisioning - Layer3 setup
  hosts: spine[0]
  serial: 1
  become: true
  become_method: su
  become_user: root

  vars_files:
  - cli_vault.yml

  tasks:
    - name: Auto configure link IPs
      pn_ztp:
        pn_cliusername: "{{ USERNAME }}"
        pn_clipassword: "{{ PASSWORD }}"
        pn_fabric_name: 'ebgp-fabric'
        pn_spine_list: "{{ groups['spine'] }}"
        pn_leaf_list: "{{ groups['leaf'] }}"
        pn_fabric_type: 'layer3'
        pn_run_l2_l3: True
        pn_net_address: '172.168.1.0'
        pn_cidr: '24'
        pn_supernet: '30'
        pn_assign_loopback: True
        pn_inband_ip: '172.1.15.0/24'
        pn_loopback_ip: '109.109.109.0/24'   # It is 101.101.101.0/24 by default
        pn_bfd: True
        pn_bfd_min_rx: 200
        pn_bfd_multiplier: 3
      register: ztp_l3_out
      until:  ztp_l3_out.failed != true  # If error pops up it will retry the code
      retries: 3                         # This is the retries count
      delay: 1
      ignore_errors: yes

    - debug:
        var: ztp_l3_out.stdout_lines

    - pause:
        seconds: 2


# This task is to configure eBGP.
# It uses pn_ebgp.py module from library/ directory.
# pn_cliusername and pn_clipassword comes from vars file - cli_vault.yml
# If you don't specify values for pn_bgp_maxpath, pn_bgp_redistribute, pn_bgp_as_range,
# then it will take the default values specified in the pn_ebgp.py module.
# If the tasks fails then it will retry as specified by retries count.
- name: Zero Touch Provisioning - BGP setup
  hosts: spine[0]
  serial: 1
  become: true
  become_method: su
  become_user: root

  vars_files:
  - cli_vault.yml

  tasks:
    - name: Configure eBGP
      pn_ebgp:
        pn_cliusername: "{{ USERNAME }}"
        pn_clipassword: "{{ PASSWORD }}"
        pn_spine_list: "{{ groups['spine'] }}"
        pn_leaf_list: "{{ groups['leaf'] }}"
        pn_bfd: True
        # pn_bgp_maxpath:                       # default 16
        # pn_bgp_redistribute:                  # default connected
        # pn_bgp_as_range:                      # default 65000
      register: bgp_out
      until: bgp_out.failed != true             # If the above code fails it will retry the code
      retries: 3                                # This is the retries count
      delay: 1
      ignore_errors: yes

    - debug:
        var: bgp_out.stdout_lines
    - pause:
        seconds: 2

- name: Disable ports using run cli commands module
  hosts: spine[0]
  become: true
  become_method: su
  become_user: root

  vars_files:
  - cli_vault.yml

  vars:
  - command_file: /etc/ansible/disable_ports.txt

  tasks:
    - name: Disable ports
      pn_run_cli_commands:
        pn_cliusername: "{{ USERNAME }}"
        pn_clipassword: "{{ PASSWORD }}"
        pn_commands_file: "{{ lookup('file', '{{ command_file }}') }}"
      register: commands_out
      until:  commands_out.failed != true
      retries: 3
      delay: 3

    - debug:
        var: commands_out.stdout_lines

    - pause:
        seconds: 2
