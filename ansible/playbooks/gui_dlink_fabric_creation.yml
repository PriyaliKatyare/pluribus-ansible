#Dlink Fabric Creation
---


# This play is to accept eula.
# It uses pn_eula_accept.py module from library/ directory.
# pn_cliusername and pn_clipassword comes from vars file - cli_vault.yml
- name: Zero Touch Provisioning - Eula accept
  hosts: localhost

  vars_files:
  - cli_vault.yml

  tasks:
    - name: Auto accept EULA
      pn_eula_accept:
        pn_cliusername: "{{ USERNAME }}"                   # Cli username (value comes from cli_vault.yml).
        pn_clipassword: "{{ PASSWORD }}"                   # Cli password (value comes from cli_vault.yml).
        pn_dlink_switch_list: "{{ groups['switch'] }}"     # List of all switches
        pn_dlink_switch_ips: "{{ groups['switch'] | map('extract', hostvars, ['ansible_host']) | join(',') }}"   # IPs of all switches separated by comma


# This play is to configure fabric
# pn_cliusername and pn_clipassword comes from vars file - cli_vault.yml
- name: Create/join fabric
  hosts: switch
  serial: 1

  vars_files:
  - cli_vault.yml

  tasks:
    - name: Fabric creation/join
      dlink_fabric_creation:
        pn_cliusername: "{{ USERNAME }}"                             # Cli username (value comes from cli_vault.yml).
        pn_clipassword: "{{ PASSWORD }}"                             # Cli password (value comes from cli_vault.yml).
        pn_switch: "{{ inventory_hostname }}"                        # Name of the switch on which this task is currently getting executed.
        pn_switch_list: "{{ groups['switch'] | default([]) }}"       # List of all switches mentioned under [switch] grp in hosts file.
        pn_fabric_name: "{{ pn_fabric_name }}"                       # Name of the fabric to create.
        pn_inband_ip: "{{ pn_inband_ip }}"                           # Inband ips to be assigned to switches starting with this value. Default: 172.16.0.0/24.
        pn_toggle_40g: "{{ pn_toggle_40g }}"                         # Flag to indicate if 40g ports should be converted to 10g ports or not. Default: True
        pn_dns_ip: "{{ pn_dns_ip }}"                                 # Specify DNS-IP value to be assigned to switches.
        pn_dns_secondary_ip: "{{ pn_dns_secondary_ip }}"             # Specify DNS-SECONDARY-IP value to be assigned to switches.
        pn_domain_name: "{{ pn_domain_name }}"                       # Specify DOMAIN-NAME value to be assigned to switches.
        pn_ntp_server: "{{ pn_ntp_server }}"                         # Specify NTP-SERVER value to be assigned to switches.
      register: ztp_out                                              # Variable to hold/register output of the above tasks.
      until: ztp_out.failed != true                                  # If the above code fails it will retry the code
      retries: 3                                                     # This is the retries count
      delay: 3
